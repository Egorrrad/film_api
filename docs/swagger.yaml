basePath: /
definitions:
  models.Actor:
    properties:
      birthday:
        description: ?????
        type: string
      films:
        items:
          type: string
        type: array
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Actors:
    properties:
      actors:
        items:
          $ref: '#/definitions/models.Actor'
        type: array
      count:
        type: integer
      sort:
        type: string
    type: object
  models.Film:
    properties:
      actors:
        items:
          type: string
        type: array
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      rating:
        type: integer
    type: object
  models.Films:
    properties:
      count:
        type: integer
      films:
        items:
          $ref: '#/definitions/models.Film'
        type: array
      sort:
        type: string
    type: object
host: localhost:4000
info:
  contact: {}
  description: Это API для сервера фильмотеки
  title: Film App API
  version: "1.0"
paths:
  /api/actor:
    delete:
      consumes:
      - application/json
      description: Удаление информации об актёре по id
      parameters:
      - description: Actor ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: server error
          schema:
            type: string
      summary: Удаление информации об актере
      tags:
      - actor
    get:
      consumes:
      - application/json
      description: Получение информации о конкретном актере по id
      parameters:
      - description: Actor ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Actor'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: server error
          schema:
            type: string
      summary: Получение информации об актере
      tags:
      - actor
    post:
      consumes:
      - application/json
      description: Добавление информации об актёре (имя, пол, дата рождения) через
        JSON
      parameters:
      - description: Add actor
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: server error
          schema:
            type: string
      summary: Добавление информации об актере
      tags:
      - actor
    put:
      consumes:
      - application/json
      description: Возможно изменить любую информацию об актёре по его id, как частично,
        так и полностью. Принимается модель actor в виде Json
      parameters:
      - description: Change actor
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: server error
          schema:
            type: string
      summary: Изменение информации об актере
      tags:
      - actor
  /api/actors:
    get:
      consumes:
      - application/json
      description: Получение списка актёров, для каждого актёра выдаётся также список
        фильмов с его участием
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Actors'
        "500":
          description: server error
          schema:
            type: string
      summary: Получение списка актёров
      tags:
      - actors
  /api/film:
    delete:
      consumes:
      - application/json
      description: Удаление фильма по его id
      parameters:
      - description: Film ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: server error
          schema:
            type: string
      summary: Удаление фильма
      tags:
      - film
    get:
      consumes:
      - application/json
      description: Получение фильма по его id
      parameters:
      - description: Film ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Film'
        "500":
          description: server error
          schema:
            type: string
      summary: Получение фильма по id
      tags:
      - film
    post:
      consumes:
      - application/json
      description: 'При добавлении фильма указываются его название (не менее 1 и не
        более 150 символов), описание (не более 1000 символов), дата выпуска, рейтинг
        (от 0 до 10) и список актёров:'
      parameters:
      - description: Add film
        in: body
        name: film
        required: true
        schema:
          $ref: '#/definitions/models.Film'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: server error
          schema:
            type: string
      summary: Добавление фильма
      tags:
      - film
  /api/films:
    get:
      consumes:
      - application/json
      description: Получение списка фильмов с сортировкой по рейтингу, дате и названию
      parameters:
      - description: Sorted By
        in: query
        name: by
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Films'
        "500":
          description: server error
          schema:
            type: string
      summary: Получение списка фильмов
      tags:
      - films
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: API-Key
    type: apiKey
swagger: "2.0"
